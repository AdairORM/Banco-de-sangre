<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>